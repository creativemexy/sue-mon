name: Deploy to OCI

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.OCI_SSH_PRIVATE_KEY }}
        
    - name: Add OCI host to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.OCI_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to OCI
      run: |
        # Create deployment script
        cat > deploy.sh << 'EOF'
        #!/bin/bash
        set -e
        
        echo "Starting deployment..."
        
        # Navigate to project directory
        cd /opt/sue-mon
        
        # Backup current version
        if [ -d "current" ]; then
          echo "Backing up current version..."
          cp -r current backup-$(date +%Y%m%d-%H%M%S)
        fi
        
        # Create new deployment directory
        DEPLOY_DIR="deploy-$(date +%Y%m%d-%H%M%S)"
        mkdir -p $DEPLOY_DIR
        
        echo "Deploying to $DEPLOY_DIR..."
        
        # Copy files to deployment directory
        rsync -av --exclude='.git' --exclude='node_modules' --exclude='.env' --exclude='config/config.php' ./ $DEPLOY_DIR/
        
        # Set proper permissions
        chmod -R 755 $DEPLOY_DIR
        chmod -R 644 $DEPLOY_DIR/public/
        
        # Update symlink to point to new deployment
        ln -sfn $DEPLOY_DIR current
        
        # Restart PHP-FPM if needed
        if command -v systemctl &> /dev/null; then
          sudo systemctl reload php8.3-fpm
        fi
        
        # Clean up old deployments (keep last 3)
        ls -dt deploy-* | tail -n +4 | xargs -r rm -rf
        
        echo "Deployment completed successfully!"
        EOF
        
        chmod +x deploy.sh
        
        # Copy files to OCI instance
        rsync -avz --delete \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.env' \
          --exclude='config/config.php' \
          ./ ${{ secrets.OCI_USER }}@${{ secrets.OCI_HOST }}:/opt/sue-mon/
          
        # Execute deployment script on OCI
        ssh ${{ secrets.OCI_USER }}@${{ secrets.OCI_HOST }} "cd /opt/sue-mon && ./deploy.sh"
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi 